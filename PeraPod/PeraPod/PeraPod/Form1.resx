<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iIAiIgCIiAIiIAiIgCIiA//Z
</value>
  </data>
</root>